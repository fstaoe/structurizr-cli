name: Structurizr CI
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: 17
          distribution: graalvm
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Test
        run: ./gradlew

      - name: Compile
        if: ${{ github.ref == 'refs/heads/master' }}
        run: |
          ./gradlew nativeCompile

      - name: Verify on Windows
        if: ${{ runner.os == 'windows' && github.ref == 'refs/heads/master' }}
        run: |
          ./build/native/nativeCompile/structurizr-cli.exe export -workspace ./examples/workspace.json -format plantuml -output ./build/diagrams
          ./build/native/nativeCompile/structurizr-cli.exe export -workspace ./examples/workspace.json -format websequencediagrams -output ./build/diagrams
          ./build/native/nativeCompile/structurizr-cli.exe export -workspace ./examples/workspace.json -format json -output ./build/diagrams
          ./build/native/nativeCompile/structurizr-cli.exe export -workspace ./examples/workspace.json -format mermaid -output ./build/diagrams
          ./build/native/nativeCompile/structurizr-cli.exe export -workspace ./examples/workspace.json -format plantuml/c4plantuml -output ./build/diagrams
          ./build/native/nativeCompile/structurizr-cli.exe list -workspace ./examples/workspace.json
          ./build/native/nativeCompile/structurizr-cli.exe validate -workspace ./examples/workspace.json
          ./build/native/nativeCompile/structurizr-cli.exe inspect -workspace ./examples/workspace.json

      - name: Verify on Non-Windows
        if: ${{ runner.os != 'windows' && github.ref == 'refs/heads/master' }}
        run: |
          ./build/native/nativeCompile/structurizr-cli export -workspace ./examples/workspace.json -format plantuml -output ./build/diagrams
          ./build/native/nativeCompile/structurizr-cli export -workspace ./examples/workspace.json -format websequencediagrams -output ./build/diagrams
          ./build/native/nativeCompile/structurizr-cli export -workspace ./examples/workspace.json -format json -output ./build/diagrams
          ./build/native/nativeCompile/structurizr-cli export -workspace ./examples/workspace.json -format mermaid -output ./build/diagrams
          ./build/native/nativeCompile/structurizr-cli export -workspace ./examples/workspace.json -format plantuml/c4plantuml -output ./build/diagrams
          ./build/native/nativeCompile/structurizr-cli list -workspace ./examples/workspace.json
          ./build/native/nativeCompile/structurizr-cli validate -workspace ./examples/workspace.json
          ./build/native/nativeCompile/structurizr-cli inspect -workspace ./examples/workspace.json

      - uses: actions/upload-artifact@v4
        name: Upload
        if: ${{ success() && github.ref == 'refs/heads/master' }}
        with:
          name: structurizr-cli-${{ runner.os }}-${{ runner.arch }}
          path: ./build/native/nativeCompile/structurizr-cli*